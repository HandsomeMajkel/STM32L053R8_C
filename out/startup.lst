ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccxa6vSy.s 			page 1


   1              	# 1 "startup.S"
   1              	/******************************************************************************
   0              	
   0              	
   0              	
   2              	* author: Freddie Chopin, http://www.freddiechopin.info/
   3              	* file: startup.S
   4              	* last change: 2012-01-08
   5              	*
   6              	* chip: ARMv6-M (Cortex-M0)
   7              	* compiler: arm-none-eabi-gcc (Sourcery CodeBench Lite 2011.09-69) 4.6.1
   8              	*
   9              	* description:
  10              	* ARMv6-M (Cortex-M0) assembly startup code
  11              	******************************************************************************/
  12              	
  13              	/*
  14              	+=============================================================================+
  15              	| includes
  16              	+=============================================================================+
  17              	*/
  18              	
  19              	#include "hdr/hdr_special_registers.h"
   1              	/** \file hdr_special_registers.h
   2              	 * \brief Header with definition of bits in special registers in ARMv6-M core
   3              	 * \author Freddie Chopin, http://www.freddiechopin.info/
   4              	 * \date 2012-01-08
   5              	 */
   6              	
   7              	/******************************************************************************
   8              	* chip: ARMv6-M (Cortex-M0)
   9              	* compiler: arm-none-eabi-gcc (Sourcery CodeBench Lite 2011.09-69) 4.6.1
  10              	******************************************************************************/
  11              	
  12              	#ifndef HDR_SPECIAL_REGISTERS_H_
  13              	#define HDR_SPECIAL_REGISTERS_H_
  14              	
  15              	/*
  16              	+-----------------------------------------------------------------------------+
  17              	| PRIMASK - Register to mask out configurable exceptions
  18              	+-----------------------------------------------------------------------------+
  19              	*/
  20              	
  21              	#define PRIMASK_MASK_EXCEPTIONS_bit			0
  22              	
  23              	#define PRIMASK_MASK_EXCEPTIONS				(1 << PRIMASK_MASK_EXCEPTIONS_bit)
  24              	
  25              	/*
  26              	+-----------------------------------------------------------------------------+
  27              	| CONTROL - The special-purpose control register
  28              	+-----------------------------------------------------------------------------+
  29              	*/
  30              	
  31              	#define CONTROL_ALTERNATE_STACK_bit			1
  32              	
  33              	#define CONTROL_ALTERNATE_STACK				(1 << CONTROL_ALTERNATE_STACK_bit)
  34              	
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccxa6vSy.s 			page 2


  20              	
  21              	/*
  22              	+=============================================================================+
  23              	| ARMv6-M (Cortex-M0) startup code
  24              	+=============================================================================+
  25              	*/
  26              	
  27              	.text
  28              	.balign 2
  29              	.syntax unified
  30              	.thumb
  31              	.thumb_func
  32              	.global Reset_Handler
  33              	
  34              	Reset_Handler:
  35              	
  36              	/*
  37              	+-----------------------------------------------------------------------------+
  38              	| Initialize the process stack pointer
  39              	+-----------------------------------------------------------------------------+
  40              	*/
  41              	
  42 0000 0F48     		ldr		r0, =__process_stack_end
  43 0002 80F30988 		msr		PSP, r0
  44              	
  45              	/*
  46              	+-----------------------------------------------------------------------------+
  47              	| Thread mode uses process stack (PSP). Thread mode on ARMv6-M is privileged.
  48              	+-----------------------------------------------------------------------------+
  49              	*/
  50              	
  51 0006 0220     		movs	r0, #CONTROL_ALTERNATE_STACK
  52 0008 80F31488 		msr		CONTROL, r0
  53 000c BFF36F8F 		isb
  54              	
  55              	/*
  56              	+-----------------------------------------------------------------------------+
  57              	| Branch to low_level_init_0() function (.data and .bss are not initialized!)
  58              	+-----------------------------------------------------------------------------+
  59              	*/
  60              	
  61 0010 0C48     		ldr		r0, =low_level_init_0
  62 0012 8047     		blx		r0
  63              	
  64              	/*
  65              	+-----------------------------------------------------------------------------+
  66              	| Initialize .data section
  67              	+-----------------------------------------------------------------------------+
  68              	*/
  69              	
  70 0014 0C49     		ldr		r1, =__data_init_start
  71 0016 0D4A     	    ldr		r2, =__data_start
  72 0018 0D4B     	    ldr		r3, =__data_end
  73              	
  74 001a 01E0     		b		2f
  75 001c 01C9     	1:	ldmia	r1!, {r0}
  76 001e 01C2     		stmia	r2!, {r0}
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccxa6vSy.s 			page 3


  77 0020 9A42     	2:	cmp		r2, r3
  78 0022 FBD1     		bne		1b
  79              	
  80              	/*
  81              	+-----------------------------------------------------------------------------+
  82              	| Zero-init .bss section
  83              	+-----------------------------------------------------------------------------+
  84              	*/
  85              	
  86 0024 0020     		movs	r0, #0
  87 0026 0B49     		ldr		r1, =__bss_start
  88 0028 0B4A     		ldr		r2, =__bss_end
  89              	
  90 002a 00E0     		b		2f
  91 002c 01C1     	1:	stmia	r1!, {r0}
  92 002e 9142     	2:	cmp		r1, r2
  93 0030 FCD1     		bne		1b
  94              	
  95              	
  96              	/*
  97              	+-----------------------------------------------------------------------------+
  98              	| Call C++ constructors for global and static objects
  99              	+-----------------------------------------------------------------------------+
 100              	*/
 101              	#ifdef __USES_CXX
 102              		ldr		r0, =__libc_init_array
 103              		blx		r0
 104              	#endif
 105              	
 106              	/*
 107              	+-----------------------------------------------------------------------------+
 108              	| Branch to low_level_init_1() function
 109              	+-----------------------------------------------------------------------------+
 110              	*/
 111              	
 112 0032 0A48     		ldr		r0, =low_level_init_1
 113 0034 8047     		blx		r0
 114              	
 115              	/*
 116              	+-----------------------------------------------------------------------------+
 117              	| Branch to main() with link
 118              	+-----------------------------------------------------------------------------+
 119              	*/
 120              	
 121 0036 0A48     		ldr		r0, =main
 122 0038 8047     		blx		r0
 123              	
 124              	/*
 125              	+-----------------------------------------------------------------------------+
 126              	| Call C++ destructors for global and static objects
 127              	+-----------------------------------------------------------------------------+
 128              	*/
 129              	#ifdef __USES_CXX
 130              		ldr		r0, =__libc_fini_array
 131              		blx		r0
 132              	#endif
 133              	
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccxa6vSy.s 			page 4


 134              	/*
 135              	+-----------------------------------------------------------------------------+
 136              	| On return - loop till the end of the world
 137              	+-----------------------------------------------------------------------------+
 138              	*/
 139              	
 140 003a FEE7     		b		.
 141              	
 142              	/*
 143              	+=============================================================================+
 144              	| __default_low_level_init() - replacement for undefined low_level_init_0()
 145              	| and/or low_level_init_1(). This function just returns.
 146              	+=============================================================================+
 147              	*/
 148              	
 149              	.text
 150              	.balign 2
 151              	.syntax unified
 152              	.thumb
 153              	.thumb_func
 154              	.global __default_low_level_init
 155              	
 156              	__default_low_level_init:
 157 003c 7047     		bx		lr
 158              	
 159              	/*
 160              	+=============================================================================+
 161              	| assign undefined low_level_init_0() and/or low_level_init_1() to
 162              	| __default_low_level_init()
 163              	+=============================================================================+
 164              	*/
 165              	
 166              	.weak	low_level_init_0
 167              	.global	low_level_init_0
 168              	.set	low_level_init_0, __default_low_level_init
 169              	
 170              	.weak	low_level_init_1
 171              	.global	low_level_init_1
 172 003e 00000000 	.set	low_level_init_1, __default_low_level_init
 172      00000000 
 172      00000000 
 172      00000000 
 172      00000000 
ARM GAS  C:\Users\MICHA~1\AppData\Local\Temp\ccxa6vSy.s 			page 5


DEFINED SYMBOLS
           startup.S:28     .text:0000000000000000 $t
           startup.S:34     .text:0000000000000000 Reset_Handler
           startup.S:156    .text:000000000000003c low_level_init_0
           startup.S:156    .text:000000000000003c low_level_init_1
           startup.S:156    .text:000000000000003c __default_low_level_init
           startup.S:172    .text:000000000000003e $d
           startup.S:172    .text:0000000000000040 $d

UNDEFINED SYMBOLS
__process_stack_end
__data_init_start
__data_start
__data_end
__bss_start
__bss_end
main
